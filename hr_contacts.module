<?php
/**
 * @file
 * Code for the Contacts feature.
 */

include_once 'hr_contacts.features.inc';

/**
 * Implements hook_menu_alter()
 */
function hr_contacts_menu_alter(&$items) {
  $items['node/add/hr-contact']['access callback'] = 'hr_contacts_add_node_access';
}

function hr_contacts_add_node_access($op, $node, $account = NULL) {
  $access = node_access($op, $node, $account);
  if ($access == TRUE && isset($_GET[OG_AUDIENCE_FIELD])) {
    $gid = $_GET[OG_AUDIENCE_FIELD];
    if (!og_is_member('node', $gid)) {
      $access = FALSE;
    }
  }
  return $access;
}

function _hr_contacts_copy_field(&$node_form, $profile, $field_name, $type) {
  if (isset($profile->{$field_name}[LANGUAGE_NONE])) {
    switch ($type) {
      case 'textfield':
        $node_form[$field_name][LANGUAGE_NONE][0]['value']['#default_value'] = $profile->{$field_name}[LANGUAGE_NONE][0]['value'];
        break;
      case 'entityreference':
        $values = array();
        foreach ($profile->{$field_name}[LANGUAGE_NONE] as $val) {
          $values[] = $val['target_id'];
        }
        $node_form[$field_name][LANGUAGE_NONE]['#default_value'] = $values;
        break;
      case 'phone':
        foreach ($profile->{$field_name}[LANGUAGE_NONE] as $i => $val) {
          if ($i > 0) {
            $node_form[$field_name][LANGUAGE_NONE][$i] = $node_form[$field_name][LANGUAGE_NONE][0];
          }
          $node_form[$field_name][LANGUAGE_NONE][$i]['#default_value'] = $val;
        }
        break;
      case 'email':
        foreach ($profile->{$field_name}[LANGUAGE_NONE] as $i => $val) {
          if ($i > 0) {
            $node_form[$field_name][LANGUAGE_NONE][$i] = $node_form[$field_name][LANGUAGE_NONE][0];
          }
          $node_form[$field_name][LANGUAGE_NONE][$i]['email']['#default_value'] = $val['email'];
        }
        break;
      case 'link':
        foreach ($profile->{$field_name}[LANGUAGE_NONE] as $i => $val) {
          if ($i > 0) {
            $node_form[$field_name][LANGUAGE_NONE][$i] = $node_form[$field_name][LANGUAGE_NONE][0];
          }
          $node_form[$field_name][LANGUAGE_NONE][$i]['#default_value'] = $val;
        }
        break;
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter()
 */
function hr_contacts_form_og_ui_confirm_subscribe_alter(&$form, &$form_state) {
  global $user;
  if (isset($form['field_contact_information'])) {
    $profile = profile2_load_by_user($user, 'main');
    //debug($profile);
    $node_form = &$form['field_contact_information'][LANGUAGE_NONE]['form'];
    $fields = array(
      'field_first_name' => 'textfield',
      'field_last_name' => 'textfield',
      'field_organizations' => 'entityreference',
      'field_organizations_other' => 'textfield',
      'field_job_title' => 'entityreference',
      'field_job_title_other' => 'textfield',
      'field_phones' => 'phone',
      'field_location' => 'entityreference',
      'field_emails' => 'email',
      'field_social_media' => 'link',
      'field_skype_id' => 'textfield',
    );

    foreach ($fields as $field_name => $type) {
      _hr_contacts_copy_field($node_form, $profile, $field_name, $type);
    }

    // Fill in and hide field_first_name
    $node_form['field_first_name'][LANGUAGE_NONE][0]['value']['#type'] = 'hidden';

    // Fill in and hide field_last_name
    $node_form['field_last_name'][LANGUAGE_NONE][0]['value']['#type'] = 'hidden';

    // Fill in main email
    $node_form['field_email'][LANGUAGE_NONE][0]['email']['#default_value'] = $user->mail;

    // Hide og_group_ref
    $node_form['og_group_ref'][LANGUAGE_NONE][0]['default']['#type'] = 'hidden';

  }
}

/**
 * Implements hook_og_features_registry()
 */
function hr_contacts_og_features_registry() {
  $registry = array();
  $feature = new stdClass();
  $feature->id = 'hr_contacts';
  $feature->name = t('Contacts');
  $feature->description = t('Provide contacts to your space.');
  $feature->components = array(
    'node' => array(
      'hr_contact',
    ),
    'views' => array(
      'hr_contacts_panes',
    ),
    'pane' => array(
      'hr_contacts_panes-list',
      'hr_contacts',
    ),
  );
  $registry[$feature->id] = $feature;
  return $registry;
}

/**
 * Implements hook_og_features_toggle($entity, $entity_id, $entity_type, $features)
 */
function hr_contacts_og_features_toggle($entity, $entity_id, $entity_type, $features) {
  if (isset($features['hr_contacts'])) {
    $mlid = og_menu_single_get_link_mlid('node', $entity_id);
    if (empty($features['hr_contacts'])) {
      menu_link_delete(NULL, 'node/'.$entity_id.'/contacts');  
    }
    else {
      // See if menu link already exists
      $menu_link = menu_link_get_preferred('node/'.$entity_id.'/contacts', OG_MENU_SINGLE_MENU_NAME);
      if (empty($menu_link)) {
        $menu_link = array(
          'link_path' => 'node/'.$entity_id.'/contacts',
          'link_title' => 'Contacts',
          'menu_name' => OG_MENU_SINGLE_MENU_NAME,
          'weight' => 2,
          'plid' => $mlid,
        );
        menu_link_save($menu_link);
      }
    }
  }
        
}

/** 
 * Implementation of hook_entity_info_alter()
 */
function hr_contacts_entity_info_alter(&$entity_info) {

  // Quick links
  $entity_info['fieldable_panels_pane']['bundles']['hr_contacts'] = array(
    'label' => t('Contacts'),
    'pane category' => t('Contacts'),
    'pane top level' => TRUE,
    'admin' => array(
      'path' => 'admin/structure/fieldable-panels-panes/manage/%fieldable_panels_panes_type',
      'bundle argument' => 4,
      'real path' => 'admin/structure/fieldable-panels-panes/manage/hr-contacts',
      'access arguments' => array('administer fieldable panels panes'),
    ),
  );
}

/**
 * Implements hook_og_membership_insert()
 * Creates a check-in message when someones checks into an operation
 */
/*function hr_contacts_og_membership_insert(OgMembership $og_membership) {
  global $user;
  if ($og_membership->type == 'hr_responder') {
    // Someone is checking in
    $message = message_create('hr_contacts_check_in', array('uid' => $user->uid));
    $wrapper = entity_metadata_wrapper('message', $message);
    $nid = $og_membership->field_contact_information[LANGUAGE_NONE][0]['target_id'];
    $node = node_load($nid);
    $group = node_load($og_membership->gid);
    $wrapper->field_operation->set($group);
    $wrapper->field_node_ref->set($node);
    $wrapper->save();
  }
}*/
